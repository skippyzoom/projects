;+
; Density parameters for
  project = 'parametric_wave/run000'
;-

imgData = data.den1[gfxInds.x0:gfxInds.xf, $
                    gfxInds.y0:gfxInds.yf, $
                    gfxInds.z0:gfxInds.zf, $
                    *]
imgSize = size(imgData)
if imgSize[0] eq 4 then permutation = [1,0,2,3] $
else permutation = [1,0,2]
if imgSize[0] eq 4 then nPlots = imgSize[4] $
else nPlots = 1
imgData = reform(transpose(imgData,permutation))
xData = grid.y
yData = grid.x
xSize = n_elements(xData)
ySize = n_elements(yData)
position = multi_position([1,nPlots],edges=[0.12,0.10,0.80,0.80],buffers=[0.00,0.05])

;; aspect_ratio = 1.0
;; title = strcompress(string(dt*1e3*plotStep,format='(f5.1)'),/remove_all)
;; title = "t = "+title+" ms"
;; max_abs = max(abs(imgData))
;; min_value = -max_abs
;; max_value = max_abs
;; xmajor = 5
;; xminor = 7
;; xtickvalues = (xData[1]+xData[xSize-1])*indgen(xmajor)/(xmajor-1)
;; xtickname = strcompress(fix(xtickvalues),/remove_all)
;; xrange = [xtickvalues[0],xtickvalues[xmajor-1]]
;; ymajor = 5
;; yminor = 7
;; ytickvalues = (yData[1]+yData[ySize-1])*indgen(ymajor)/(ymajor-1)
;; ytickname = strcompress(fix(ytickvalues),/remove_all)
;; yrange = [ytickvalues[0],ytickvalues[ymajor-1]]
;; rgb_table = 5
;; image = {axis_style: 2, $
;;          aspect_ratio: aspect_ratio, $
;;          position: position, $
;;          title: title, $
;;          min_value: min_value, $
;;          max_value: max_value, $
;;          xrange: xrange, $
;;          yrange: yrange, $
;;          xtickvalues: xtickvalues, $
;;          ytickvalues: ytickvalues, $
;;          xtickname: xtickname, $
;;          ytickname: ytickname, $
;;          xstyle: 1, $
;;          ystyle: 1, $
;;          xtitle: "Zonal [m]", $
;;          ytitle: "Vertical [m]", $
;;          xmajor: xmajor, $
;;          xminor: xminor, $
;;          ymajor: ymajor, $
;;          yminor: yminor, $
;;          xticklen: 0.02, $
;;          yticklen: 0.02, $
;;          xsubticklen: 0.5, $
;;          ysubticklen: 0.5, $
;;          xtickdir: 1, $
;;          ytickdir: 1, $
;;          xtickfont_size: 14.0, $
;;          ytickfont_size: 14.0, $
;;          font_size: 16.0, $
;;          font_name: "Times", $
;;          rgb_table: rgb_table, $
;;          buffer: 1B}


img_pos = image.position
cb_width = 0.03
cb_height = 0.40
cb_x0 = max(img_pos[2,*])+0.03
cb_x1 = cb_x0 + cb_width
cb_y0 = 0.50-0.50*cb_height
cb_y1 = 0.50+0.50*cb_height
global_colorbar = (tag_exist(image,'min_value') and $
                   tag_exist(image,'max_value'))
cb_position = make_array(4,nPlots,type=4,value=-1)
if global_colorbar then cb_position[*,0] = [cb_x0,cb_y0,cb_x1,cb_y1] $
else cb_position = multi_position(nPlots,edges=[[reform(img_pos[2,*])],[reform(img_pos[1,*])]], $
                               width=0.02,height=img_pos[3,0]-img_pos[1,0])
major = 7
tickvalues = 0
if global_colorbar then $
   tickvalues = (image.max_value-image.min_value)*findgen(major)/(major-1)+ $
                image.min_value
tickname = !NULL
if global_colorbar then $
   tickname = plusminus_labels(tickvalues,format='f5.2')
cb_title = "$\delta n/n_0 [%]$"
colorbar = {orientation: 1, $
            title: cb_title, $
            position: cb_position, $
            textpos: 1, $
            tickdir: 1, $
            ticklen: 0.2, $
            major: 7, $
            font_name: "Times", $
            font_size: 14.0}
if global_colorbar then $
   colorbar = create_struct(colorbar, $
                            'tickvalues',tickvalues, $
                            'tickname',tickname)

kw = create_struct('image',image,'colorbar',colorbar)
